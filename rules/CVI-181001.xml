<?xml version="1.0" encoding="UTF-8"?>
<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="Remote command execution"/>
    <language value="php"/>
    <match mode="function-param-controllable"><![CDATA[(system|passthru|exec|pcntl_exec|shell_exec|popen|proc_open|ob_start|expect_popen|mb_send_mail|w32api_register_function|w32api_invoke_function|ssh2_exec)]]></match>
    <repair block="in-function"><![CDATA[(escapeshellcmd|escapeshellarg)]]></repair>
    <level value="10"/>
    <test>
        <case assert="true"><![CDATA[system($_GET['pass']);]]></case>
        <case assert="true"><![CDATA[passthru($_GET['pass']);]]></case>
        <case assert="true"><![CDATA[exec($_GET['pass1'],$_GET['pass2']);]]></case>
        <case assert="true"><![CDATA[pcntl_exec('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[shell_exec('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[popen('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[proc_open('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[ob_start('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[expect_popen('$_GET['pass']');]]></case>
        <case assert="true"><![CDATA[ssh2_exec($connection, '$_GET['pass']');]]></case>
    </test>
    <solution>
        ## Security risks
        When the application needs to call some external programs to process the content, it will use some functions that execute system commands.
        When the user can control the parameters in the command execution function, it will be possible to inject malicious system commands into the normal commands, causing command execution attacks.

        ## Fix solution
        1. Try not to use the functions that execute commands.
        2. Strictly filter the external control parameters into the command execution function (e.g. use escapeshellcmd or escapeshellarg to filter the parameters)
        3. Upgrade ImageMagick to the latest version.

        ## Sample code

        ```
        <?php
            $ip=$_GET['ip'];
            system("ping "+$ip);
        ? >
        ```
        Construct `http://www.test.com/test.php?ip=127.0.0.1|ifconfig` i.e. a command injection attack will occur

        Correct code example
        ```php
        <?php
            $command = './configure '.$_POST['configure_options'];// Allow any number of parameters
            $escaped_command = escapeshellcmd($command);
            system($escaped_command);
        ?>
        ```
    </solution>
    <status value="on"/>
    <author name="Feei" email="feei@feei.cn"/>
</cobra>