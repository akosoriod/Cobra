<?xml version="1.0" encoding="UTF-8"?>
<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="Unverified arbitrary link jump"/>
    <language value="php"/>
    <match mode="function-param-controllable"><![CDATA[header]]></match>
    <repair block="in-function-up"><![CDATA[in_array]]></repair>
    <level value="5"/>
    <test>
        <case assert="true"><![CDATA[header("Location: ".$_GET["url"]);]]></case>
    </test>
    <solution>
        ## Security risks
        UR(Unvalidated Redirect)

        ### Causes
        Web application can perform URL redirection with user-controllable parameters + Insufficient filtering restrictions on user-entered URLs + Attacker maliciously constructs input parameters

        ### Risks
        - Controlled jump links to malicious websites or phishing attacks to steal user information.
        - Bypass permission checks to reach restricted pages and perform illegal manipulations.

        ## Fixes
        1. Avoid simply using the URL jump function.
        2. If you need to use the URL jump function, avoid allowing the user's input as the jump target.
        3. If it is not possible to avoid using user's input as the jump target, strict restrictions and filters must be applied to ensure that the URL provided by the user is legitimate and has permission to access.
        4. Set URL jump whitelist. 5.
        5. When a user jumps away, force a jump to a warning page to indicate that the user is leaving the current site.

        Use whitelist to determine
        ```php
        <?php if(!in_array($_GET["url"], $whitelist)) exit; ?>
        ```
    </solution>
    <status value="on"/>
    <author name="Feei" email="feei@feei.cn"/>
</cobra>