<?xml version="1.0" encoding="UTF-8"?>
<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="get_headers caused by SSRF"/>
    <language value="php"/>
    <match mode="function-param-controllable"><![CDATA[get_headers]]></match>
    <level value="7"/>
    <test>
        <case assert="true"><![CDATA[
                $url = $_GET['url'];
                echo get_headers($url);
        ]]></case>
         <case assert="false"><![CDATA[
                $url = 'http://www.example.com';
                echo get_headers($url);
        ]]></case>
    </test>
    <solution>
      ## Security Risks
        SSRF vulnerability (Server-Side Request Forgery)

        ### Formation principle
        SSRF is mostly formed because the server side provides the ability to obtain data from other server applications and does not filter and restrict the target address.

        ### Risk
        1, the attacker can extranet, the server intranet, local port scanning, to obtain the service banner information.
        2, attacking applications running on the intranet or local.
        3、Fingerprinting of intranet web applications.
        4、Attack the intranet and outtranet web applications.
        5、Use file protocol to read local files, etc.

        ## Fix solution
        1. restrict the protocol to HTTP, HTTPS
        2. restrict the request domain whitelist
        3. prohibit 30x jumping

        ## Example
        ```php
        $url = $_GET['url'];
        echo get_headers($url);// no filtering of user-controllable parameters, malicious construction of input by attackers could lead to SSRF
        ```
    </solution>
    <status value="on"/>
    <author name="Lightless" email="root@lightless.me"/>
</cobra>