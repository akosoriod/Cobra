<?xml version="1.0" encoding="UTF-8"?>
<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="MySQL Execute Functions"/>
    <language value="php"/>
    <match mode="function-param-controllable"><![CDATA[(mysql_query|mysql_db_query)]]></match>
    <repair block="in-function"><![CDATA[(mysql_real_escape_string|addslashes)]]></repair>
    <level value="8"/>
    <test>
        <case assert="true"><![CDATA[
            $username = $_POST['username'];
            $password = $_POST['password'];
            $query = "SELECT * FROM users WHERE user = $username AND password = $password ";
            mysql_query($query);
        ]]></case>
        <case assert="false"><![CDATA[
            $username = "user";
            $password = "cobra123";
            $query = "SELECT * FROM users WHERE user = $username AND password = $password ";
            mysql_query($query);
        ]]></case>
        <case assert="false"><![CDATA[
            $username = $_POST['username'];
            $password = $_POST['password'];
            $username = mysql_real_escape_string($username); //转义
            $password = mysql_real_escape_string($password); //转义
            $query = "SELECT * FROM users WHERE user = $username AND password = $password ";
            mysql_query($query);
        ]]></case>

    </test>
    <solution>
        ## Security risks

        ### Causes of SQL injection formation
        SQL statement is user controllable, if SQL statement is executed directly without sufficient filtering of parameters, SQL injection may occur

        ### Risks
        - User information is tampered with
        - Attacker steals code and user data
        - All data of business operation is maliciously obtained
        - Online code is illegally tampered with and causes the impact of sending traffic or other benefits for malicious attackers

        ## Fix Solution
        - The functions that are no longer used can be taken offline directly
        - Introduce security components
        - Code level fix: strict filtering of user-controllable parameters
            Use `mysql_real_escape_string` to escape special characters in strings used in SQL statements
            If there is no escape function and you use \ to escape special characters, you can use the adslashes function

        ## Code examples
        ```
        <?php
            $username = $_POST['username'];
            $password = $_POST['username'];
            $username = mysql_real_escape_string($username); //转义
            $password = mysql_real_escape_string($password); //转义
            $query = "SELECT * FROM users WHERE user = $username AND password = $password ";
            mysql_query($query);
        ?>
        ```
    </solution>
    <status value="on"/>
    <author name="Feei" email="feei@feei.cn"/>
</cobra>
